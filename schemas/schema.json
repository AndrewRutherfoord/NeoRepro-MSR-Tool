{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "defaults": {
      "description": "Each value will be applied to each repository config given the value isn't overridden in the repo. config.",
      "$ref": "#/definitions/shared"
    },
    "repositories": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the repository. If repositories are pre-clone, this will be used to access the repository.",
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "If repository cannot be found on system, url used to clone it."
          },
          "delete_clone": {
            "description": "If repository was cloned, then True will result in the clone being deleted once drilling complete.",
            "type": "boolean"
            },
            "index_file_modifications": {
            "description": "Should commit file modification be drilled. Takes longer to drill large repositories.",
            "type": "boolean"
          },
          "pydriller": {
            "$ref": "#/definitions/pydriller"
          },
          "filters": {
            "$ref": "#/definitions/filters"
          }
        },
        "required": ["name"]
      }
    }
  },
  "required": ["repositories"],
  "definitions": {
    "shared": {
      "type": "object",
      "properties": {
        "delete_clone": {
          "type": "boolean"
        },
        "index_file_modifications": {
          "type": "boolean"
        },
        "pydriller": {
          "$ref": "#/definitions/pydriller"
        },
        "filters": {
          "$ref": "#/definitions/filters"
        }
      }
    },
    "pydriller": {
      "type": "object",
      "description": "Use the pydriller builtin filters. Pydriller Reference: https://pydriller.readthedocs.io/en/latest/repository.html",
      "properties": {
        "since": { "type": "string", "format": "date-time" },
        "from_commit": { "type": "string" },
        "from_tag": { "type": "string" },
        "to": { "type": "string", "format": "date-time" },
        "to_commit": { "type": "string" },
        "to_tag": { "type": "string" },
        "only_in_branch": { "type": "string" },
        "only_no_merge": { "type": "boolean" },
        "only_authors": { "type": "array", "items": { "type": "string" } },
        "only_commits": { "type": "array", "items": { "type": "string" } },
        "only_release": { "type": "boolean" },
        "filepath": { "type": "string" },
        "only_modifications_with_file_types": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "filters": {
      "description": "String filtering of items before insertion into storage. A list of filter configs which behave as boolean AND. All filters must be valid for an item to be inserted into storage.",
      "type": "object",
      "properties": {
        "commit": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "The field on the object to be filtered. Eg. `msg` for commit message. "
              },
              "value": {
                "description": "String or list of strings to be found in field. Behaves as an OR when a list is provided. True if any of the strings found.",
                "oneOf": [
                  { "type": "string" },
                  { "type": "array", "items": { "type": "string" } }
                ]
              },
              "method": {
                "description": "The string filtering mode.",
                "type": "string",
                "enum": ["exact", "!exact", "contains", "!contains"]
              }
            }
          },
          "required": ["field", "filter_value", "method"]
        }
      }
    }
  }
}
