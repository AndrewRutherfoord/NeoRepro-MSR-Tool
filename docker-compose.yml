volumes:
  neo4j:
  rabbitmq:
services:
  neo4j:
    container_name: neo4j
    image: neo4j:latest
    hostname: "neo4j"
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc", "apoc-extended"]
    volumes:
      - neo4j:/data
      - neo4j:/logs
      - neo4j:/plugins

      # Location where Database Dump files are stored. Also loaded from here.
      - ./volumes/neo4j_import:/var/lib/neo4j/import

  # Message Queue used to send send & distrubte drill jobs to driller-workers
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq/mnesia/
    healthcheck:
      # Pings rabbitmq service to check if started
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 5

  driller-worker:
    build:
      context: ./
      dockerfile: ./driller/Dockerfile
    environment:
      - LOG_LEVEL=${DRILLER_LOG_LEVEL}
      - NEO4J_LOG_LEVEL=${DRILLER_NEO4J_LOG_LEVEL}
      - RABBITMQ_LOG_LEVEL=${DRILLER_RABBITMQ_LOG_LEVEL}
    env_file: .env
    volumes:
      - ./driller/:/app/driller/ # For Development
      - ./common/:/app/common/ # For Development

      - ./volumes/repos:/app/repositories # Location of Repos to Drill/Where they will be cloned.
    deploy:
      replicas: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
      neo4j:
        condition: service_started

  backend:
    container_name: backend
    ports:
      - 8000:8000
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    env_file: .env
    environment:
      - RABBITMQ_HOST=localhost
    network_mode: host
    volumes:
      - ./backend/:/app/backend/ # For Development
      - ./common/:/app/common/ # For Development

      - ./volumes/queries:/app/queries # Location of Cypher Queries
      - ./volumes/configs:/app/configs # Location of Drill Config Files
      - ./volumes/neo4j_import/:/app/neo4j_import/
    depends_on:
      neo4j:
        condition: service_started
      driller-worker:
        condition: service_started

  frontend:
    container_name: frontend
    ports:
      - ${FRONTEND_PORT}:5173
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    volumes:
      - ./frontend/src:/app/frontend/src # For Development
      - ./schemas/:/app/schemas/
      - ./README.md:/app/README.md:ro # For Development
    depends_on:
      - backend
